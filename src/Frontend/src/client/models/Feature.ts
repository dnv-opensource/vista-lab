/* tslint:disable */
/* eslint-disable */
/**
 * QueryApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FeatureProps,
    FeaturePropsFromJSON,
    FeaturePropsFromJSONTyped,
    FeaturePropsToJSON,
} from './FeatureProps';
import {
    Geometry,
    GeometryFromJSON,
    GeometryFromJSONTyped,
    GeometryToJSON,
} from './Geometry';

/**
 * 
 * @export
 * @interface Feature
 */
export interface Feature {
    /**
     * 
     * @type {Geometry}
     * @memberof Feature
     */
    geometry?: Geometry;
    /**
     * 
     * @type {FeatureProps}
     * @memberof Feature
     */
    properties?: FeatureProps;
    /**
     * 
     * @type {string}
     * @memberof Feature
     */
    type?: string;
}

export function FeatureFromJSON(json: any): Feature {
    return FeatureFromJSONTyped(json, false);
}

export function FeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): Feature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'geometry': !exists(json, 'geometry') ? undefined : GeometryFromJSON(json['geometry']),
        'properties': !exists(json, 'properties') ? undefined : FeaturePropsFromJSON(json['properties']),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function FeatureToJSON(value?: Feature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'geometry': GeometryToJSON(value.geometry),
        'properties': FeaturePropsToJSON(value.properties),
        'type': value.type,
    };
}

