/* tslint:disable */
/* eslint-disable */
/**
 * QueryApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FeatureProps,
    FeaturePropsFromJSON,
    FeaturePropsFromJSONTyped,
    FeaturePropsToJSON,
} from './FeatureProps';
import {
    GeoJSONObjectType,
    GeoJSONObjectTypeFromJSON,
    GeoJSONObjectTypeFromJSONTyped,
    GeoJSONObjectTypeToJSON,
} from './GeoJSONObjectType';
import {
    ICRSObject,
    ICRSObjectFromJSON,
    ICRSObjectFromJSONTyped,
    ICRSObjectToJSON,
} from './ICRSObject';
import {
    Point,
    PointFromJSON,
    PointFromJSONTyped,
    PointToJSON,
} from './Point';

/**
 * 
 * @export
 * @interface PointFeaturePropsFeature
 */
export interface PointFeaturePropsFeature {
    /**
     * 
     * @type {Array<number>}
     * @memberof PointFeaturePropsFeature
     */
    bbox?: Array<number> | null;
    /**
     * 
     * @type {ICRSObject}
     * @memberof PointFeaturePropsFeature
     */
    crs?: ICRSObject;
    /**
     * 
     * @type {GeoJSONObjectType}
     * @memberof PointFeaturePropsFeature
     */
    type?: GeoJSONObjectType;
    /**
     * 
     * @type {string}
     * @memberof PointFeaturePropsFeature
     */
    id?: string | null;
    /**
     * 
     * @type {Point}
     * @memberof PointFeaturePropsFeature
     */
    geometry?: Point;
    /**
     * 
     * @type {FeatureProps}
     * @memberof PointFeaturePropsFeature
     */
    properties?: FeatureProps;
}

export function PointFeaturePropsFeatureFromJSON(json: any): PointFeaturePropsFeature {
    return PointFeaturePropsFeatureFromJSONTyped(json, false);
}

export function PointFeaturePropsFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointFeaturePropsFeature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bbox': !exists(json, 'bbox') ? undefined : json['bbox'],
        'crs': !exists(json, 'crs') ? undefined : ICRSObjectFromJSON(json['crs']),
        'type': !exists(json, 'type') ? undefined : GeoJSONObjectTypeFromJSON(json['type']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'geometry': !exists(json, 'geometry') ? undefined : PointFromJSON(json['geometry']),
        'properties': !exists(json, 'properties') ? undefined : FeaturePropsFromJSON(json['properties']),
    };
}

export function PointFeaturePropsFeatureToJSON(value?: PointFeaturePropsFeature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bbox': value.bbox,
        'crs': ICRSObjectToJSON(value.crs),
        'type': GeoJSONObjectTypeToJSON(value.type),
        'id': value.id,
        'geometry': PointToJSON(value.geometry),
        'properties': FeaturePropsToJSON(value.properties),
    };
}

