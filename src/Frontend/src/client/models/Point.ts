/* tslint:disable */
/* eslint-disable */
/**
 * QueryApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GeoJSONObjectType,
    GeoJSONObjectTypeFromJSON,
    GeoJSONObjectTypeFromJSONTyped,
    GeoJSONObjectTypeToJSON,
} from './GeoJSONObjectType';
import {
    ICRSObject,
    ICRSObjectFromJSON,
    ICRSObjectFromJSONTyped,
    ICRSObjectToJSON,
} from './ICRSObject';
import {
    IPosition,
    IPositionFromJSON,
    IPositionFromJSONTyped,
    IPositionToJSON,
} from './IPosition';

/**
 * 
 * @export
 * @interface Point
 */
export interface Point {
    /**
     * 
     * @type {Array<number>}
     * @memberof Point
     */
    bbox?: Array<number> | null;
    /**
     * 
     * @type {ICRSObject}
     * @memberof Point
     */
    crs?: ICRSObject;
    /**
     * 
     * @type {GeoJSONObjectType}
     * @memberof Point
     */
    type?: GeoJSONObjectType;
    /**
     * 
     * @type {IPosition}
     * @memberof Point
     */
    coordinates?: IPosition;
}

export function PointFromJSON(json: any): Point {
    return PointFromJSONTyped(json, false);
}

export function PointFromJSONTyped(json: any, ignoreDiscriminator: boolean): Point {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bbox': !exists(json, 'bbox') ? undefined : json['bbox'],
        'crs': !exists(json, 'crs') ? undefined : ICRSObjectFromJSON(json['crs']),
        'type': !exists(json, 'type') ? undefined : GeoJSONObjectTypeFromJSON(json['type']),
        'coordinates': !exists(json, 'coordinates') ? undefined : IPositionFromJSON(json['coordinates']),
    };
}

export function PointToJSON(value?: Point | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bbox': value.bbox,
        'crs': ICRSObjectToJSON(value.crs),
        'type': GeoJSONObjectTypeToJSON(value.type),
        'coordinates': IPositionToJSON(value.coordinates),
    };
}

