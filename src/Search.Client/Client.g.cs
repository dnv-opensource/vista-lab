//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Search.Client
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ISearchClient
    {

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Search for gmod paths.
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="SearchApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HitResults> VISSearchAsync(VisVersion visVersion, SearchDto? body = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchClient : ISearchClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public SearchClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Search for gmod paths.
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="SearchApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<HitResults> VISSearchAsync(VisVersion visVersion, SearchDto? body = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            if (visVersion == null)
                throw new System.ArgumentNullException("visVersion");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/VIS/search/{visVersion}");
            urlBuilder_.Replace("{visVersion}", System.Uri.EscapeDataString(ConvertToString(visVersion, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HitResults>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new SearchApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new SearchApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T)!, string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody!, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new SearchApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody!, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new SearchApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object? value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool) 
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DataChannelEntity
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public DataChannelEntity(string? @alertPriority, double? @dataChannelType_CalculationPeriod, string? @dataChannelType_Type, double? @dataChannelType_UpdateCycle, string? @format_Restriction_Enumeration, string? @format_Restriction_FractionDigits, int? @format_Restriction_Length, double? @format_Restriction_MaxExclusive, double? @format_Restriction_MaxInclusive, int? @format_Restriction_MaxLength, double? @format_Restriction_MinExclusive, double? @format_Restriction_MinInclusive, int? @format_Restriction_MinLength, int? @format_Restriction_Pattern, int? @format_Restriction_TotalDigits, string? @format_Restriction_WhiteSpace, string? @format_Type, string? @internalId, string? @localId, string? @localId_Calculation, string? @localId_Command, string? @localId_Content, string? @localId_Detail, string? @localId_Position, string? @localId_PrimaryItem, string? @localId_Quantity, string? @localId_SecondaryItem, string? @localId_Type, string? @localId_VisVersion, string? @name, string? @nameObject_NamingRule, string? @qualityCoding, double? @range_High, double? @range_Low, string? @remarks, string? @shortId, System.DateTimeOffset? @timestamp, string? @unit_QuantityName, string? @unit_UnitSymbol, string? @vesselId)

        {

            this.VesselId = @vesselId;

            this.InternalId = @internalId;

            this.LocalId = @localId;

            this.ShortId = @shortId;

            this.NameObject_NamingRule = @nameObject_NamingRule;

            this.DataChannelType_Type = @dataChannelType_Type;

            this.DataChannelType_CalculationPeriod = @dataChannelType_CalculationPeriod;

            this.DataChannelType_UpdateCycle = @dataChannelType_UpdateCycle;

            this.Format_Type = @format_Type;

            this.Format_Restriction_Enumeration = @format_Restriction_Enumeration;

            this.Format_Restriction_FractionDigits = @format_Restriction_FractionDigits;

            this.Format_Restriction_Length = @format_Restriction_Length;

            this.Format_Restriction_MaxExclusive = @format_Restriction_MaxExclusive;

            this.Format_Restriction_MaxInclusive = @format_Restriction_MaxInclusive;

            this.Format_Restriction_MaxLength = @format_Restriction_MaxLength;

            this.Format_Restriction_MinExclusive = @format_Restriction_MinExclusive;

            this.Format_Restriction_MinInclusive = @format_Restriction_MinInclusive;

            this.Format_Restriction_MinLength = @format_Restriction_MinLength;

            this.Format_Restriction_Pattern = @format_Restriction_Pattern;

            this.Format_Restriction_TotalDigits = @format_Restriction_TotalDigits;

            this.Format_Restriction_WhiteSpace = @format_Restriction_WhiteSpace;

            this.Range_High = @range_High;

            this.Range_Low = @range_Low;

            this.Unit_UnitSymbol = @unit_UnitSymbol;

            this.Unit_QuantityName = @unit_QuantityName;

            this.QualityCoding = @qualityCoding;

            this.AlertPriority = @alertPriority;

            this.Name = @name;

            this.Remarks = @remarks;

            this.LocalId_VisVersion = @localId_VisVersion;

            this.LocalId_PrimaryItem = @localId_PrimaryItem;

            this.LocalId_SecondaryItem = @localId_SecondaryItem;

            this.LocalId_Position = @localId_Position;

            this.LocalId_Quantity = @localId_Quantity;

            this.LocalId_Calculation = @localId_Calculation;

            this.LocalId_Content = @localId_Content;

            this.LocalId_Command = @localId_Command;

            this.LocalId_Type = @localId_Type;

            this.LocalId_Detail = @localId_Detail;

            this.Timestamp = @timestamp;

        }
        [System.Text.Json.Serialization.JsonPropertyName("vesselId")]
        public string? VesselId { get; }

        [System.Text.Json.Serialization.JsonPropertyName("internalId")]
        public string? InternalId { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId")]
        public string? LocalId { get; }

        [System.Text.Json.Serialization.JsonPropertyName("shortId")]
        public string? ShortId { get; }

        [System.Text.Json.Serialization.JsonPropertyName("nameObject_NamingRule")]
        public string? NameObject_NamingRule { get; }

        [System.Text.Json.Serialization.JsonPropertyName("dataChannelType_Type")]
        public string? DataChannelType_Type { get; }

        [System.Text.Json.Serialization.JsonPropertyName("dataChannelType_CalculationPeriod")]
        public double? DataChannelType_CalculationPeriod { get; }

        [System.Text.Json.Serialization.JsonPropertyName("dataChannelType_UpdateCycle")]
        public double? DataChannelType_UpdateCycle { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Type")]
        public string? Format_Type { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_Enumeration")]
        public string? Format_Restriction_Enumeration { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_FractionDigits")]
        public string? Format_Restriction_FractionDigits { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_Length")]
        public int? Format_Restriction_Length { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MaxExclusive")]
        public double? Format_Restriction_MaxExclusive { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MaxInclusive")]
        public double? Format_Restriction_MaxInclusive { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MaxLength")]
        public int? Format_Restriction_MaxLength { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MinExclusive")]
        public double? Format_Restriction_MinExclusive { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MinInclusive")]
        public double? Format_Restriction_MinInclusive { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_MinLength")]
        public int? Format_Restriction_MinLength { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_Pattern")]
        public int? Format_Restriction_Pattern { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_TotalDigits")]
        public int? Format_Restriction_TotalDigits { get; }

        [System.Text.Json.Serialization.JsonPropertyName("format_Restriction_WhiteSpace")]
        public string? Format_Restriction_WhiteSpace { get; }

        [System.Text.Json.Serialization.JsonPropertyName("range_High")]
        public double? Range_High { get; }

        [System.Text.Json.Serialization.JsonPropertyName("range_Low")]
        public double? Range_Low { get; }

        [System.Text.Json.Serialization.JsonPropertyName("unit_UnitSymbol")]
        public string? Unit_UnitSymbol { get; }

        [System.Text.Json.Serialization.JsonPropertyName("unit_QuantityName")]
        public string? Unit_QuantityName { get; }

        [System.Text.Json.Serialization.JsonPropertyName("qualityCoding")]
        public string? QualityCoding { get; }

        [System.Text.Json.Serialization.JsonPropertyName("alertPriority")]
        public string? AlertPriority { get; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; }

        [System.Text.Json.Serialization.JsonPropertyName("remarks")]
        public string? Remarks { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_VisVersion")]
        public string? LocalId_VisVersion { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_PrimaryItem")]
        public string? LocalId_PrimaryItem { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_SecondaryItem")]
        public string? LocalId_SecondaryItem { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Position")]
        public string? LocalId_Position { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Quantity")]
        public string? LocalId_Quantity { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Calculation")]
        public string? LocalId_Calculation { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Content")]
        public string? LocalId_Content { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Command")]
        public string? LocalId_Command { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Type")]
        public string? LocalId_Type { get; }

        [System.Text.Json.Serialization.JsonPropertyName("localId_Detail")]
        public string? LocalId_Detail { get; }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        public System.DateTimeOffset? Timestamp { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Explanation
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public Explanation(string? @description, System.Collections.Generic.List<ExplanationDetail>? @details, float? @value)

        {

            this.Description = @description;

            this.Details = @details;

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; }

        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.List<ExplanationDetail>? Details { get; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public float? Value { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExplanationDetail
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public ExplanationDetail(string? @description, System.Collections.Generic.List<ExplanationDetail>? @details, float? @value)

        {

            this.Description = @description;

            this.Details = @details;

            this.Value = @value;

        }
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; }

        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.List<ExplanationDetail>? Details { get; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public float? Value { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HitResult
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public HitResult(DataChannelEntity? @document, Explanation? @explanation, System.Collections.Generic.Dictionary<string, LazyDocument>? @fields, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>? @highlight, string? @id, string? @index, System.Collections.Generic.List<string>? @matchedQueries, long? @primaryTerm, string? @routing, double? @score, long? @sequenceNumber, System.Collections.Generic.List<object>? @sorts, string? @type, long? @version)

        {

            this.Explanation = @explanation;

            this.Fields = @fields;

            this.Highlight = @highlight;

            this.Id = @id;

            this.Index = @index;

            this.Sorts = @sorts;

            this.Score = @score;

            this.MatchedQueries = @matchedQueries;

            this.PrimaryTerm = @primaryTerm;

            this.Routing = @routing;

            this.SequenceNumber = @sequenceNumber;

            this.Type = @type;

            this.Version = @version;

            this.Document = @document;

        }
        [System.Text.Json.Serialization.JsonPropertyName("explanation")]
        public Explanation? Explanation { get; }

        [System.Text.Json.Serialization.JsonPropertyName("fields")]
        public System.Collections.Generic.Dictionary<string, LazyDocument>? Fields { get; }

        [System.Text.Json.Serialization.JsonPropertyName("highlight")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>? Highlight { get; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; }

        [System.Text.Json.Serialization.JsonPropertyName("index")]
        public string? Index { get; }

        [System.Text.Json.Serialization.JsonPropertyName("sorts")]
        public System.Collections.Generic.List<object>? Sorts { get; }

        [System.Text.Json.Serialization.JsonPropertyName("score")]
        public double? Score { get; }

        [System.Text.Json.Serialization.JsonPropertyName("matchedQueries")]
        public System.Collections.Generic.List<string>? MatchedQueries { get; }

        [System.Text.Json.Serialization.JsonPropertyName("primaryTerm")]
        public long? PrimaryTerm { get; }

        [System.Text.Json.Serialization.JsonPropertyName("routing")]
        public string? Routing { get; }

        [System.Text.Json.Serialization.JsonPropertyName("sequenceNumber")]
        public long? SequenceNumber { get; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; }

        [System.Text.Json.Serialization.JsonPropertyName("version")]
        public long? Version { get; }

        [System.Text.Json.Serialization.JsonPropertyName("document")]
        public DataChannelEntity? Document { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HitResults
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public HitResults(System.Collections.Generic.List<HitResult>? @hits, double? @maxScore, int? @numberOfHits, long? @totalPotentialHits)

        {

            this.MaxScore = @maxScore;

            this.NumberOfHits = @numberOfHits;

            this.TotalPotentialHits = @totalPotentialHits;

            this.Hits = @hits;

        }
        [System.Text.Json.Serialization.JsonPropertyName("maxScore")]
        public double? MaxScore { get; }

        [System.Text.Json.Serialization.JsonPropertyName("numberOfHits")]
        public int? NumberOfHits { get; }

        [System.Text.Json.Serialization.JsonPropertyName("totalPotentialHits")]
        public long? TotalPotentialHits { get; }

        [System.Text.Json.Serialization.JsonPropertyName("hits")]
        public System.Collections.Generic.List<HitResult>? Hits { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LazyDocument
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public LazyDocument()

        {

        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchDto
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public SearchDto(string? @phrase, int? @topResults)

        {

            this.Phrase = @phrase;

            this.TopResults = @topResults;

        }
        [System.Text.Json.Serialization.JsonPropertyName("phrase")]
        public string? Phrase { get; }

        [System.Text.Json.Serialization.JsonPropertyName("topResults")]
        public int? TopResults { get; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VisVersion
    {

        _0 = 0,

        _1 = 1,

    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string? Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public SearchApiException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception? innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchApiException<TResult> : SearchApiException
    {
        public TResult Result { get; private set; }

        public SearchApiException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception? innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016