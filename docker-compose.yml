version: '3'

services:
  # APIs
  ingest-api:
    depends_on:
      - broker
    container_name: vista-lab-ingestapi
    restart: unless-stopped
    ports:
      - '5051:5051'
    build:
      context: .
      dockerfile: src/IngestApi/Dockerfile
    environment:
      BROKER_SERVER: 'vista-lab-broker'
      DB_HOST: 'vista-lab-db:9000'
      ILP_HOST: 'vista-lab-db'
  query-api:
    container_name: vista-lab-queryapi
    restart: unless-stopped
    ports:
      - '5052:5052'
    build:
      context: .
      dockerfile: src/QueryApi/Dockerfile
    environment:
      DB_HOST: 'vista-lab-db:9000'
      SEARCH_API_URL: 'http://vista-lab-search-api:5053'
      SIMULATOR_API_URL: 'http://vista-lab-simulator:5054'
      BROKER_SERVER: 'vista-lab-broker'
  search-api:
    depends_on:
      broker:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    container_name: vista-lab-search-api
    restart: unless-stopped
    ports:
      - '5053:5053'
    build:
      context: .
      dockerfile: src/SearchApi/Dockerfile
    environment:
      BROKER_SERVER: 'vista-lab-broker'
      ES_API_URL: 'vista-lab-elasticsearch'
  # MQTT Services
  alert-manager:
    depends_on:
      - broker
    container_name: vista-lab-alert-manager
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/AlertManager/Dockerfile
    environment:
      BROKER_SERVER: 'vista-lab-broker'
  channel-streamer:
    depends_on:
      - broker
    container_name: vista-lab-channel-streamer
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/ChannelStreamer/Dockerfile
    environment:
      BROKER_SERVER: 'vista-lab-broker'
  simulator:
    depends_on:
      - ingest-api
      - search-api
      - broker
      - channel-streamer
    container_name: vista-lab-simulator
    restart: unless-stopped
    ports:
      - '5054:5054'
    build:
      context: .
      dockerfile: src/Simulator/Dockerfile
    environment:
      BROKER_SERVER: 'vista-lab-broker'
      RUN_BACKGROUND_SERVICE: 'true'
  broker:
    depends_on:
      - questdb
    container_name: vista-lab-broker
    restart: unless-stopped
    ports:
      - '5050:5050'
    build:
      context: .
      dockerfile: src/MqttBroker/Dockerfile
  # Elastic search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: vista-lab-elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
      - '9300:9300'
    healthcheck:
      test: curl -s http://vista-lab-elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: vista-lab-kibana
    environment:
      - xpack.security.enabled=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - '5601:5601'
  # Database
  questdb:
    image: questdb/questdb:6.5.2
    container_name: vista-lab-db
    restart: unless-stopped
    ports:
      - '8812:8812'
      - '9000:9000'
      - '9003:9003'
      - '9009:9009'
    environment:
      QDB_TELEMETRY_ENABLED: 'false'
      QDB_PG_PASSWORD: 'Password1'
      QDB_PG_USER: 'sa'
      QDB_LOG_W_STDOUT_LEVEL: ERROR
      QDB_PG_SELECT_CACHE_ENABLED: 'false'
  grafana:
    depends_on:
      - questdb
    container_name: vista-lab-grafana
    image: grafana/grafana-oss:9.0.7
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./.grafana/dashboards:/var/lib/grafana/dashboards
      - ./.grafana/provisioning:/etc/grafana/provisioning
    environment:
      user: admin
      password: admin
      QDB_PG_PASSWORD: 'Password1'
      QDB_PG_USER: 'sa'
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
volumes:
  grafana-storage:
